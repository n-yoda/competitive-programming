using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;
using System.Linq;

public class SwitchingGame
{
    public int timeToWin(string[] states)
    {
        var m = states [0].Length;
        var now = Enumerable.Repeat('-', m).ToArray();
        var toOns = new bool[states.Length];
        var toOffs = new bool[states.Length];
        var cnt = states.Length;
        for (var i = 0; i < states.Length; i++)
        {
            for (var j = 0; j < m; j++)
            {
                if (now [j] != states [i] [j] && states [i] [j] != '?')
                {
                    var toHoges = states [i] [j] == '+' ? toOns : toOffs;
                    var reducible = false;
                    for (var k = i - 1; k >= 0 && states [k] [j] == '?'; k--)
                    {
                        if (toHoges [k])
                        {
                            reducible = true;
                            break;
                        }
                    }
                    if (!reducible)
                    {
                        toHoges [i] = true;
                    }
                    now [j] = states [i] [j];
                }
            }
            if (toOns [i])
                cnt++;
            if (toOffs [i])
                cnt++;
        }
        return cnt;
    }
    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof

    #region Testing code generated by KawigiEdit

    [STAThread]
    private static Boolean KawigiEdit_RunTest(int testNum, string[] p0, Boolean hasAnswer, int p1)
    {
        Console.Write("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.Length > i; ++i)
        {
            if (i > 0)
            {
                Console.Write(",");
            }
            Console.Write("\"" + p0 [i] + "\"");
        }
        Console.Write("}");
        Console.WriteLine("]");
        SwitchingGame obj;
        int answer;
        obj = new SwitchingGame();
        DateTime startTime = DateTime.Now;
        answer = obj.timeToWin(p0);
        DateTime endTime = DateTime.Now;
        Boolean res;
        res = true;
        Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
        if (hasAnswer)
        {
            Console.WriteLine("Desired answer:");
            Console.WriteLine("\t" + p1);
        }
        Console.WriteLine("Your answer:");
        Console.WriteLine("\t" + answer);
        if (hasAnswer)
        {
            res = answer == p1;
        }
        if (!res)
        {
            Console.WriteLine("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime).TotalSeconds >= 2)
        {
            Console.WriteLine("FAIL the timeout");
            res = false;
        } else if (hasAnswer)
        {
            Console.WriteLine("Match :-)");
        } else
        {
            Console.WriteLine("OK, but is it right?");
        }
        Console.WriteLine("");
        return res;
    }

    public static void Main(string[] args)
    {
        Boolean all_right;
        all_right = true;
		
        string[] p0;
        int p1;
		
        // ----- test 0 -----
        p0 = new string[]{ "++--", "--++" };
        p1 = 5;
        all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
        // ------------------
		
        // ----- test 1 -----
        p0 = new string[]{ "+-++", "+-++" };
        p1 = 3;
        all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
        // ------------------
		
        // ----- test 2 -----
        p0 = new string[]{ "++", "+?", "?+", "++" };
        p1 = 5;
        all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
        // ------------------
		
        // ----- test 3 -----
        p0 = new string[]{ "+", "?", "?", "?", "-" };
        p1 = 7;
        all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
        // ------------------
		
        // ----- test 4 -----
        p0 = new string[]
        {
            "+??+++",
            "++??+-",
            "?++??+",
            "?-+-??",
            "??+?++",
            "++-?+?",
            "?++?-+",
            "?--+++",
            "-??-?+"
        };
        p1 = 20;
        all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
        // ------------------
		
        if (all_right)
        {
            Console.WriteLine("You're a stud (at least on the example cases)!");
        } else
        {
            Console.WriteLine("Some of the test cases had errors.");
        }
    }

    #endregion

    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
