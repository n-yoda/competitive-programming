using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;
using System.Linq;


public class EllysScrabble
{
	public string getMin(string letters, int maxDistance)
	{
		var n = maxDistance;
		var ch = letters.ToCharArray();
		var nw = new char[ch.Length];
		var use = new bool[ch.Length];
		for (int i = 0; i < ch.Length; i ++)
		{
			var l = Math.Max(i - n, 0);
			var r = Math.Min(i + n, ch.Length - 1);
			if (l == i - n && !use[l])
			{
				nw[i] = ch[l];
				use[l] = true;
				continue;
			}
			int idx = ch.Length;
			char min = (char)('Z' + 1);
			for (int j = l; j <= r; j ++)
			{
				if (!use[j] && ch[j] < min)
				{
					idx = j;
					min = ch[j];
				}
			}
			use[idx] = true;
			nw[i] = ch[idx];
		}
		return new string(nw);
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	#region Testing code generated by KawigiEdit
	[STAThread]
	private static Boolean KawigiEdit_RunTest(int testNum, string p0, int p1, Boolean hasAnswer, string p2) {
		Console.Write("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + p1);
		Console.WriteLine("]");
		EllysScrabble obj;
		string answer;
		obj = new EllysScrabble();
		DateTime startTime = DateTime.Now;
		answer = obj.getMin(p0, p1);
		DateTime endTime = DateTime.Now;
		Boolean res;
		res = true;
		Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
		if (hasAnswer) {
			Console.WriteLine("Desired answer:");
			Console.WriteLine("\t" + "\"" + p2 + "\"");
		}
		Console.WriteLine("Your answer:");
		Console.WriteLine("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			Console.WriteLine("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime).TotalSeconds >= 2) {
			Console.WriteLine("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			Console.WriteLine("Match :-)");
		} else {
			Console.WriteLine("OK, but is it right?");
		}
		Console.WriteLine("");
		return res;
	}
	public static void Main(string[] args) {
		Boolean all_right;
		all_right = true;
		
		string p0;
		int p1;
		string p2;
		
		// ----- test 0 -----
		p0 = "TOPCODER";
		p1 = 3;
		p2 = "CODTEPOR";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "ESPRIT";
		p1 = 3;
		p2 = "EIPRST";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "BAZINGA";
		p1 = 8;
		p2 = "AABGINZ";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		p1 = 9;
		p2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "GOODLUCKANDHAVEFUN";
		p1 = 7;
		p2 = "CADDGAHEOOFLUKNNUV";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "AAAWDIUAOIWDESBEAIWODJAWDBPOAWDUISAWDOOPAWD";
		p1 = 6;
		p2 = "AAAADDEIBWAEUIODWADSBIAJWODIAWDOPOAWDUOSPWW";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = "ABRACADABRA";
		p1 = 2;
		p2 = "AABARACBDAR";
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			Console.WriteLine("You're a stud (at least on the example cases)!");
		} else {
			Console.WriteLine("Some of the test cases had errors.");
		}
	}
	#endregion
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
