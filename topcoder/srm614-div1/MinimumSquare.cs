using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;
using System.Linq;


public class MinimumSquare
{
	struct Pt
	{
		public int x, y;
	}
	
	class XComp : IComparer<Pt>
	{
		public int Compare(Pt a, Pt b)
		{
			return a.x - b.x;
		}
	}

	class YComp : IComparer<Pt>
	{
		public int Compare(Pt a, Pt b)
		{
			return a.y - b.y;
		}
	}
	
	public long minArea(int[] x, int[] y, int K)
	{
		var n = x.Length;
		var ps = new Pt[n];
		var p2 = new Pt[n];
		var xc = new XComp();
		var yc = new YComp();
		var min = long.MaxValue;
		
		for (int i = 0; i < n; i ++)
		{
			ps[i].x = x[i];
			ps[i].y = y[i];
 		}
 		
 		if (K == 1)
 		{
 			return 4;
 		}

 		Array.Sort(ps, 0, n, xc);
 		for(int i = 0; i < n; i ++)
 		{
 			for (int j = i + K - 1; j < n; j ++)
 			{
 				var s1 = ps[j].x - ps[i].x + 2;
 				ps.CopyTo(p2, 0);
 				Array.Sort(p2, i, j - i + 1, yc);
 				for (int st = i; st + K - 1 <= j; st ++)
 				{
 					var e = st + K - 1;
 					var s2 = p2[e].y - p2[st].y + 2;
 					var s3 = s2 > s1 ? s2 : s1;
 					long s4 = (long)s3 * (long)s3;
 					min = s4 < min ? s4 : min;
 				}
 			}
 		}
 		return min;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	#region Testing code generated by KawigiEdit
	[STAThread]
	private static Boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, Boolean hasAnswer, long p3) {
		Console.Write("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.Length > i; ++i) {
			if (i > 0) {
				Console.Write(",");
			}
			Console.Write(p0[i]);
		}
		Console.Write("}" + "," + "{");
		for (int i = 0; p1.Length > i; ++i) {
			if (i > 0) {
				Console.Write(",");
			}
			Console.Write(p1[i]);
		}
		Console.Write("}" + "," + p2);
		Console.WriteLine("]");
		MinimumSquare obj;
		long answer;
		obj = new MinimumSquare();
		DateTime startTime = DateTime.Now;
		answer = obj.minArea(p0, p1, p2);
		DateTime endTime = DateTime.Now;
		Boolean res;
		res = true;
		Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
		if (hasAnswer) {
			Console.WriteLine("Desired answer:");
			Console.WriteLine("\t" + p3);
		}
		Console.WriteLine("Your answer:");
		Console.WriteLine("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			Console.WriteLine("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime).TotalSeconds >= 2) {
			Console.WriteLine("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			Console.WriteLine("Match :-)");
		} else {
			Console.WriteLine("OK, but is it right?");
		}
		Console.WriteLine("");
		return res;
	}
	public static void Main(string[] args) {
		Boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int p2;
		long p3;
		
		// ----- test 0 -----
		p0 = new int[]{0,3};
		p1 = new int[]{0,7};
		p2 = 2;
		p3 = 81L;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{-4,3,1};
		p1 = new int[]{3,-1,-2};
		p2 = 2;
		p3 = 16L;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{0,0,1,1,2,2};
		p1 = new int[]{0,1,0,1,0,1};
		p2 = 4;
		p3 = 9L;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1000000000,1000000000,1000000000,-1000000000,-1000000000,-1000000000};
		p1 = new int[]{1000000000,0,-1000000000,1000000000,0,-1000000000};
		p2 = 3;
		p3 = 4000000008000000004L;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{-47881,28623,1769,-38328,-16737,16653,-23181,37360,41429,26282,254,728,8299,-41080,-29498,17488,-23937,-11,33319,25232};
		p1 = new int[]{-46462,48985,-43820,-19587,-33593,-28337,13667,-48131,-5568,-2332,-41918,-31370,-3695,42599,-37788,-40096,39049,25045,-2122,3874};
		p2 = 8;
		p3 = 1695545329L;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			Console.WriteLine("You're a stud (at least on the example cases)!");
		} else {
			Console.WriteLine("Some of the test cases had errors.");
		}
	}
	#endregion
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
